name: Flash Device

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  flash:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r .github/workflows/helpers/requirements.txt

      - name: Build firmware
        run: |
            cmake --preset=Debug
            cmake --build --preset=Debug

      - name: Flash the device
        env:
          PROJECT_DIR: ${{ github.workspace }}
        run: |
          source .venv/bin/activate
          python .github/workflows/helpers/flash_device.py

  ai_code_review:
    runs-on: ubuntu-latest
    if:  github.event_name == 'pull_request' && !contains(github.event.pull_request.title, '@NOAI')


    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r .github/workflows/helpers/requirements.txt
      - name: Debug Python environment
        run: |
          source .venv/bin/activate
          python --version
          pip --version
          pip list
          which python
          which pip

      - name: Get AI Code Review
        env:
          GEMINI_API_KEY_SECRET: ${{ secrets.NONYA_BUSINESS_API_KEY }}
          PR_DIFF_URL: ${{ github.event.pull_request.diff_url }}
          GITHUB_TOKEN_SECRET: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

        run: |
          source .venv/bin/activate
          python .github/workflows/helpers/ai_pr_reviewer.py
